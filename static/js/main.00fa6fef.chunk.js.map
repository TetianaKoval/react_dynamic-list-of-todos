{"version":3,"sources":["components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Loader","className","TodoList","todos","selectedTodo","selectTodo","useState","todosLoaded","switchTodosLoaded","useEffect","length","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","getVisibleTodos","value","setValue","status","setStatus","filterByStatus","filter","toLowerCase","includes","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","LoadUsers","a","userId","selectedUser","href","name","App","setTodos","todoId","visibleTodos","find","loadData","todosFromServer","todosAfterFiltering","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00fa6fef.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number,\n  selectTodo: (id:number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => {\n  const [todosLoaded, switchTodosLoaded] = useState(false);\n\n  useEffect(() => {\n    if (todos.length > 0) {\n      switchTodosLoaded(true);\n    }\n  });\n\n  return (\n    <>\n      {todosLoaded ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <tr\n                key={todo.id}\n                data-cy=\"todo\"\n                className={classNames({\n                  'has-background-info-light': selectedTodo === todo.id,\n                })}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={\n                    classNames({\n                      'has-text-danger': !todo.completed,\n                      'has-text-success': todo.completed,\n                    })\n                  }\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(todo.id)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames(\n                        'far',\n                        {\n                          'fa-eye-slash': selectedTodo === todo.id,\n                          'fa-eye': selectedTodo !== todo.id,\n                        },\n                      )}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n\n            {/* <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">\n                qui ullam ratione quibusdam voluptatem quia omnis\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">8</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr> */}\n          </tbody>\n        </table>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  getVisibleTodos: (visibleTodos:Todo[]) => void,\n  todos: Todo[];\n};\n\nexport const TodoFilter:React.FC<Props> = ({ getVisibleTodos, todos }) => {\n  const [value, setValue] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const filterByStatus = () => {\n    if (status === 'completed') {\n      return todos.filter(todo => todo.completed);\n    }\n\n    if (status === 'active') {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    return todos;\n  };\n\n  const filteringTodos = () => {\n    return filterByStatus().filter(todo => todo.title\n      .toLowerCase().includes(value.toLowerCase()));\n  };\n\n  useEffect(() => {\n    getVisibleTodos(filterByStatus());\n  }, [todos, status]);\n\n  useEffect(() => {\n    getVisibleTodos(filteringTodos());\n  }, [todos, value]);\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={(event) => {\n            setValue(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {value !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setValue('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  selectTodo: (id:number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [user, setUser] = useState(():User | null => null);\n\n  const LoadUsers = async () => {\n    const selectedUser = await getUser(todo.userId);\n\n    return setUser(selectedUser);\n  };\n\n  useEffect(() => {\n    LoadUsers();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\n// import { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(():Todo[] => []);\n  const [todoId, selectTodo] = useState(0);\n  const [visibleTodos, getVisibleTodos] = useState(todos);\n\n  const selectedTodo = todos.find(todo => todo.id === todoId);\n\n  const loadData = (async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                getVisibleTodos={(todosAfterFiltering:Todo[]) => getVisibleTodos(todosAfterFiltering)}\n                todos={todos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {/* <Loader /> */}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={todoId}\n                selectTodo={(id:number) => selectTodo(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          selectTodo={(id:number) => selectTodo(id)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}